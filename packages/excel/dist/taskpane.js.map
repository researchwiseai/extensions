{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://pulse-excel-addon/../../node_modules/cross-fetch/dist/browser-ponyfill.js","webpack://pulse-excel-addon/webpack/bootstrap","webpack://pulse-excel-addon/webpack/runtime/compat get default export","webpack://pulse-excel-addon/webpack/runtime/define property getters","webpack://pulse-excel-addon/webpack/runtime/global","webpack://pulse-excel-addon/webpack/runtime/hasOwnProperty shorthand","webpack://pulse-excel-addon/webpack/runtime/publicPath","webpack://pulse-excel-addon/webpack/runtime/jsonp chunk loading","webpack://pulse-excel-addon/../common/src/auth.ts","webpack://pulse-excel-addon/../common/src/apiClient.ts","webpack://pulse-excel-addon/../common/src/pkce.ts","webpack://pulse-excel-addon/./src/taskpane/pkceAuth.ts","webpack://pulse-excel-addon/../common/src/input.ts","webpack://pulse-excel-addon/./src/taskpane/taskpane.ts","webpack://pulse-excel-addon/./src/taskpane/taskpane.html"],"sourcesContent":["// Save global object in a variable\nvar __global__ =\n(typeof globalThis !== 'undefined' && globalThis) ||\n(typeof self !== 'undefined' && self) ||\n(typeof global !== 'undefined' && global);\n// Create an object that extends from __global__ without the fetch function\nvar __globalThis__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = __global__.DOMException\n}\nF.prototype = __global__; // Needed for feature detection on whatwg-fetch's code\nreturn new F();\n})();\n// Wraps whatwg-fetch with a function scope to hijack the global object\n// \"globalThis\" that's going to be patched\n(function(globalThis) {\n\nvar irrelevant = (function (exports) {\n\n  /* eslint-disable no-prototype-builtins */\n  var g =\n    (typeof globalThis !== 'undefined' && globalThis) ||\n    (typeof self !== 'undefined' && self) ||\n    // eslint-disable-next-line no-undef\n    (typeof global !== 'undefined' && global) ||\n    {};\n\n  var support = {\n    searchParams: 'URLSearchParams' in g,\n    iterable: 'Symbol' in g && 'iterator' in Symbol,\n    blob:\n      'FileReader' in g &&\n      'Blob' in g &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in g,\n    arrayBuffer: 'ArrayBuffer' in g\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {\n      throw new TypeError('Invalid character in header field name: \"' + name + '\"')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        if (header.length != 2) {\n          throw new TypeError('Headers constructor: expected name/value pair to be length 2, found' + header.length)\n        }\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body._noBody) return\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    var match = /charset=([A-Za-z0-9_-]+)/.exec(blob.type);\n    var encoding = match ? match[1] : 'utf-8';\n    reader.readAsText(blob, encoding);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      /*\n        fetch-mock wraps the Response object in an ES6 Proxy to\n        provide useful test harness features such as flush. However, on\n        ES5 browsers without fetch or Proxy support pollyfills must be used;\n        the proxy-pollyfill is unable to proxy an attribute unless it exists\n        on the object before the Proxy is created. This change ensures\n        Response.bodyUsed exists on the instance, while maintaining the\n        semantic of setting Request.bodyUsed in the constructor before\n        _initBody is called.\n      */\n      // eslint-disable-next-line no-self-assign\n      this.bodyUsed = this.bodyUsed;\n      this._bodyInit = body;\n      if (!body) {\n        this._noBody = true;\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        var isConsumed = consumed(this);\n        if (isConsumed) {\n          return isConsumed\n        } else if (ArrayBuffer.isView(this._bodyArrayBuffer)) {\n          return Promise.resolve(\n            this._bodyArrayBuffer.buffer.slice(\n              this._bodyArrayBuffer.byteOffset,\n              this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength\n            )\n          )\n        } else {\n          return Promise.resolve(this._bodyArrayBuffer)\n        }\n      } else if (support.blob) {\n        return this.blob().then(readBlobAsArrayBuffer)\n      } else {\n        throw new Error('could not read as ArrayBuffer')\n      }\n    };\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['CONNECT', 'DELETE', 'GET', 'HEAD', 'OPTIONS', 'PATCH', 'POST', 'PUT', 'TRACE'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    if (!(this instanceof Request)) {\n      throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n    }\n\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal || (function () {\n      if ('AbortController' in g) {\n        var ctrl = new AbortController();\n        return ctrl.signal;\n      }\n    }());\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n\n    if (this.method === 'GET' || this.method === 'HEAD') {\n      if (options.cache === 'no-store' || options.cache === 'no-cache') {\n        // Search for a '_' parameter in the query string\n        var reParamSearch = /([?&])_=[^&]*/;\n        if (reParamSearch.test(this.url)) {\n          // If it already exists then set the value with the current time\n          this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime());\n        } else {\n          // Otherwise add a new '_' parameter to the end with the current time\n          var reQueryString = /\\?/;\n          this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();\n        }\n      }\n    }\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill\n    // https://github.com/github/fetch/issues/748\n    // https://github.com/zloirock/core-js/issues/751\n    preProcessedHeaders\n      .split('\\r')\n      .map(function(header) {\n        return header.indexOf('\\n') === 0 ? header.substr(1, header.length) : header\n      })\n      .forEach(function(line) {\n        var parts = line.split(':');\n        var key = parts.shift().trim();\n        if (key) {\n          var value = parts.join(':').trim();\n          try {\n            headers.append(key, value);\n          } catch (error) {\n            console.warn('Response ' + error.message);\n          }\n        }\n      });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!(this instanceof Response)) {\n      throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n    }\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    if (this.status < 200 || this.status > 599) {\n      throw new RangeError(\"Failed to construct 'Response': The status provided (0) is outside the range [200, 599].\")\n    }\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = options.statusText === undefined ? '' : '' + options.statusText;\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 200, statusText: ''});\n    response.ok = false;\n    response.status = 0;\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = g.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        // This check if specifically for when a user fetches a file locally from the file system\n        // Only if the status is out of a normal range\n        if (request.url.indexOf('file://') === 0 && (xhr.status < 200 || xhr.status > 599)) {\n          options.status = 200;\n        } else {\n          options.status = xhr.status;\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        setTimeout(function() {\n          resolve(new Response(body, options));\n        }, 0);\n      };\n\n      xhr.onerror = function() {\n        setTimeout(function() {\n          reject(new TypeError('Network request failed'));\n        }, 0);\n      };\n\n      xhr.ontimeout = function() {\n        setTimeout(function() {\n          reject(new TypeError('Network request timed out'));\n        }, 0);\n      };\n\n      xhr.onabort = function() {\n        setTimeout(function() {\n          reject(new exports.DOMException('Aborted', 'AbortError'));\n        }, 0);\n      };\n\n      function fixUrl(url) {\n        try {\n          return url === '' && g.location.href ? g.location.href : url\n        } catch (e) {\n          return url\n        }\n      }\n\n      xhr.open(request.method, fixUrl(request.url), true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr) {\n        if (support.blob) {\n          xhr.responseType = 'blob';\n        } else if (\n          support.arrayBuffer\n        ) {\n          xhr.responseType = 'arraybuffer';\n        }\n      }\n\n      if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers || (g.Headers && init.headers instanceof g.Headers))) {\n        var names = [];\n        Object.getOwnPropertyNames(init.headers).forEach(function(name) {\n          names.push(normalizeName(name));\n          xhr.setRequestHeader(name, normalizeValue(init.headers[name]));\n        });\n        request.headers.forEach(function(value, name) {\n          if (names.indexOf(name) === -1) {\n            xhr.setRequestHeader(name, value);\n          }\n        });\n      } else {\n        request.headers.forEach(function(value, name) {\n          xhr.setRequestHeader(name, value);\n        });\n      }\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!g.fetch) {\n    g.fetch = fetch;\n    g.Headers = Headers;\n    g.Request = Request;\n    g.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__globalThis__);\n// This is a ponyfill, so...\n__globalThis__.fetch.ponyfill = true;\ndelete __globalThis__.fetch.polyfill;\n// Choose between native implementation (__global__) or custom implementation (__globalThis__)\nvar ctx = __global__.fetch ? __global__ : __globalThis__;\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","import fetch from \"cross-fetch\";\n/**\n * Authentication provider interface.\n */\nexport interface AuthProvider {\n    /** Perform sign-in flow. */\n    signIn(): Promise<void>;\n    /** Perform sign-out flow. */\n    signOut(): Promise<void>;\n    /** Get current access token for API calls. */\n    getAccessToken(): Promise<string>;\n}\n\nlet provider: AuthProvider | null = null;\n\n/**\n * Configure the authentication provider to use.\n * Must be called before signIn, signOut, or getAccessToken.\n */\nexport function configureAuth(authProvider: AuthProvider | null): void {\n    provider = authProvider;\n}\n\nfunction ensureProvider(): AuthProvider {\n    if (!provider) {\n        throw new Error(\n            \"AuthProvider not configured. Call configureAuth() first.\",\n        );\n    }\n    return provider;\n}\n\n/**\n * Initiate user sign-in.\n */\nexport async function signIn(): Promise<void> {\n    const p = ensureProvider();\n    return p.signIn();\n}\n\n/**\n * Sign out the current user.\n */\nexport async function signOut(): Promise<void> {\n    const p = ensureProvider();\n    return p.signOut();\n}\n\n/**\n * Retrieve an access token for authenticating API requests.\n */\nexport async function getAccessToken(): Promise<string> {\n    const p = ensureProvider();\n    return p.getAccessToken();\n}\n/**\n * Configuration for Auth0 Client Credentials authentication.\n */\nexport interface Auth0Config {\n    /** Auth0 domain (e.g., tenant.auth0.com) */\n    domain: string;\n    /** Client ID for the application */\n    clientId: string;\n    /** Client secret for the application */\n    clientSecret: string;\n    /** Audience (API identifier) for the token */\n    audience: string;\n}\n\n/**\n * Create an AuthProvider that uses Auth0 client credentials flow.\n */\nexport function createAuth0Provider(config: Auth0Config): AuthProvider {\n    let token: string | null = null;\n    let expiresAt = 0;\n    const tokenUrl = `https://${config.domain}/oauth/token`;\n    return {\n        async signIn(): Promise<void> {\n            // no-op for client credentials\n        },\n        async signOut(): Promise<void> {\n            token = null;\n            expiresAt = 0;\n        },\n        async getAccessToken(): Promise<string> {\n            const now = Date.now();\n            if (token && now < expiresAt) {\n                return token;\n            }\n            // Request a new token\n            const res = await fetch(tokenUrl, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                    grant_type: \"client_credentials\",\n                    client_id: config.clientId,\n                    client_secret: config.clientSecret,\n                    audience: config.audience,\n                }),\n            });\n            if (!res.ok) {\n                throw new Error(`${res.statusText}: ${await res.text()}`);\n            }\n            const data = await res.json();\n            if (!data.access_token || !data.expires_in) {\n                throw new Error(\n                    `Invalid Auth0 response: ${JSON.stringify(data)}`,\n                );\n            }\n            token = data.access_token;\n            expiresAt = now + data.expires_in * 1000 - 60000; // refresh 1 min early\n            return token as string;\n        },\n    };\n}\n","import fetchOriginal from 'cross-fetch';\n// Abstracted fetch for cross-platform support (injectable for Apps Script)\nexport interface FetchOptions {\n    method?:\n        | 'post'\n        | 'get'\n        | 'put'\n        | 'delete'\n        | 'patch';\n    contentType?: string;\n    headers?: Record<string, string>;\n    body?: string;\n    [key: string]: any;\n}\ntype FetchFunction = (url: string, options?: FetchOptions) => Promise<{\n  ok: boolean;\n  status: number;\n  statusText: string;\n  json: () => Promise<any>;\n  text: () => Promise<string>;\n}>;\nexport let fetchFn: FetchFunction = fetchOriginal;\nlet sleepFn = (ms: number) => new Promise<void>((resolve) => setTimeout(resolve, ms));\n/**\n * Override the fetch implementation used by the API client.\n * Useful for environments like Google Apps Script.\n */\nexport function configureFetch(fn: FetchFunction): void {\n    fetchFn = fn;\n}\n/**\n * Override the sleep function used by the API client.\n * Useful for environments like Google Apps Script.\n */\nexport function configureSleep(fn: (ms: number) => Promise<void>): void {\n    sleepFn = fn;\n}\n\n/** Configuration options for the API client */\nexport interface ConfigureOptions {\n    /** Base URL for the Pulse API (e.g. https://api.example.com/pulse/v1) */\n    baseUrl: string;\n    /** Async function to retrieve an OAuth access token */\n    getAccessToken: () => Promise<string>;\n}\n\nlet baseUrl: string;\nlet getAccessToken: () => Promise<string>;\n/**\n * Delay for the given milliseconds.\n */\nfunction sleep(ms: number): Promise<void> {\n    return sleepFn(ms);\n}\n\ninterface PostWithJobOptions {\n    intervalMs?: number;\n    onProgress?: (message: string) => void;\n    taskName?: string;\n}\n\n/**\n * Perform POST request that may return immediate data or a jobId to poll.\n * If response status is 202, polls the job status until completed, then fetches the result URL.\n */\nasync function postWithJob(\n    url: string,\n    body: Record<string, unknown>,\n    options: PostWithJobOptions = {},\n): Promise<any> {\n    const intervalMs = options.intervalMs ?? 2000;\n\n    const token = await getAccessToken();\n    const response = await fetchFn(url, {\n        method: 'post',\n        contentType: 'application/json',\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(body),\n    });\n    if (response.ok) {\n        options.onProgress?.( options.taskName ? `${options.taskName} complete successfully` : 'Request completed successfully');\n        return response.json();\n    } else if (response.status === 202) {\n        // Job accepted; poll for completion\n        const data = await response.json();\n        const jobId = data.jobId;\n        if (typeof jobId !== 'string') {\n            throw new Error(`Unexpected response: ${JSON.stringify(data)}`);\n        }\n\n        options.onProgress?.( options.taskName ? `${options.taskName} job submitted, polling for completion...` : 'Job submitted, polling for completion...');\n\n        let loopCount = 0;\n        // Poll until done\n        while (true) {\n            loopCount++;\n            console.log(`Polling job status: ${jobId} (attempt ${loopCount})`);\n            if (loopCount % 2 === 0) {\n                options.onProgress?.( options.taskName ? `Waiting for ${options.taskName.toLowerCase()} job to complete...` : 'Waiting for job to complete...');\n            }\n            await sleep(intervalMs);\n            const status = await pollJobStatus(jobId);\n            if (status.status === 'pending') {\n                continue;\n            } else if (status.status === 'completed') {\n                if (!status.resultUrl) {\n                    throw new Error(\n                        `Missing resultUrl in job status: ${JSON.stringify(status)}`,\n                    );\n                }\n                const resultResp = await fetchFn(status.resultUrl, { contentType: 'application/json', method: 'get' });\n                if (!resultResp.ok) {\n                    const errText = await resultResp.text();\n                    throw new Error(`${resultResp.statusText}: ${errText}`);\n                }\n\n                options.onProgress?.( options.taskName ? `${options.taskName} job completed successfully` : 'Job completed successfully');\n                return await resultResp.json();\n            } else {\n                throw new Error(`Job failed with status: ${status.status}`);\n            }\n        }\n    } else {\n        const errText = await response.text();\n        throw new Error(`${response.statusText}: ${errText}`);\n    }\n}\n\n/**\n * Initialize the API client with base URL and token provider.\n */\nexport function configureClient(opts: ConfigureOptions): void {\n    baseUrl = opts.baseUrl;\n    getAccessToken = opts.getAccessToken;\n}\n\n/** Result of a sentiment analysis call */\nexport interface SentimentResult {\n    sentiment: number;\n    [key: string]: any;\n}\n\n/** Theme object returned by the themes endpoint */\nexport interface Theme {\n    label: string;\n    shortLabel: string;\n    description: string;\n    representatives: string[];\n}\n\n/** Structure for similarity response */\nexport interface SimilarityResponse {\n    matrix: number[][];\n}\n\n/** Job status returned when polling asynchronous jobs */\nexport interface JobStatus {\n    status: string;\n    resultUrl?: string;\n    [key: string]: any;\n}\n\ninterface AnalyzeSentimentOptions {\n    fast?: boolean;\n    onProgress?: (message: string) => void;\n}\n\n/**\n * Call the sentiment analysis endpoint.\n * Returns final results, polling a job if necessary.\n */\nexport async function analyzeSentiment(\n    inputs: string[],\n    options?: AnalyzeSentimentOptions,\n): Promise<{ results: SentimentResult[] }> {\n    const url = `${baseUrl}/pulse/v1/sentiment`;\n    const data = await postWithJob(url, { fast: options?.fast, inputs }, { taskName: 'Sentiment analysis', onProgress: options?.onProgress });\n    if (Array.isArray(data.results)) {\n        return { results: data.results };\n    }\n    throw new Error(`Unexpected response: ${JSON.stringify(data)}`);\n}\n\ninterface GenerateThemesOptions {\n    fast?: boolean;\n    onProgress?: (message: string) => void;\n}\n\n/**\n * Call the theme generation endpoint.\n * Returns final themes, polling a job if necessary.\n */\nexport async function generateThemes(\n    inputs: string[],\n    options?: GenerateThemesOptions,\n): Promise<{ themes: Theme[] }> {\n    console.log('Generating themes for inputs:', inputs);\n\n    const url = `${baseUrl}/pulse/v1/themes`;\n    const data = await postWithJob(url, {\n        inputs,\n        fast: options?.fast ?? false,\n    }, {\n        onProgress: options?.onProgress,\n        taskName: 'Theme generation',\n    });\n    console.log('Generated themes:', data);\n    if (Array.isArray(data.themes)) {\n        return { themes: data.themes };\n    }\n    throw new Error(`Unexpected response: ${JSON.stringify(data)}`);\n}\n\ninterface CompareSimilarityOptions {\n    fast?: boolean;\n    onProgress?: (message: string) => void;\n}\n\n/**\n * Call the similarity/allocation endpoint.\n * Returns final similarity results, polling a job if necessary.\n */\nexport async function compareSimilarity(\n    setA: string[],\n    setB: string[],\n    options?: CompareSimilarityOptions,\n): Promise<SimilarityResponse> {\n    const url = `${baseUrl}/pulse/v1/similarity`;\n    const data: any = await postWithJob(url, {\n        set_a: setA,\n        set_b: setB,\n        fast: options?.fast ?? false,\n    }, {\n        onProgress: options?.onProgress,\n        taskName: 'Similarity comparison',\n    });\n    const result: SimilarityResponse = { matrix: [] };\n    if (data.matrix) {\n        result.matrix = data.matrix;\n    }\n    if (data.flattened) {\n        // Reconstruct matrix from flattened array\n        const n = setA.length;\n        const m = setB.length;\n        result.matrix = [];\n        for (let i = 0; i < n; i++) {\n            result.matrix[i] = data.flattened.slice(i * m, (i + 1) * m);\n        }\n    }\n    return result;\n}\n\n/**\n * Poll an asynchronous job by jobId.\n */\nexport async function pollJobStatus(jobId: string): Promise<JobStatus> {\n    if (!baseUrl || !getAccessToken) {\n        throw new Error(\n            'API client not configured. Call configureClient first.',\n        );\n    }\n    const token = await getAccessToken();\n    const url = `${baseUrl}/pulse/v1/jobs?jobId=${encodeURIComponent(jobId)}`;\n    const response = await fetchFn(url, {\n        method: 'get',\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    });\n    if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n}\n","// OAuth2 PKCE helpers: generate code verifier/challenge, build URLs, exchange tokens.\n// Uses Web Crypto API and cross-fetch for HTTP requests.\nimport { fetchFn } from './apiClient';\n\n/** Encode a buffer (Uint8Array) to a Base64URL string. */\nfunction base64UrlEncode(buffer: Uint8Array): string {\n  // Convert to binary string\n  let str = '';\n  for (let i = 0; i < buffer.byteLength; i++) {\n    str += String.fromCharCode(buffer[i]);\n  }\n  // Base64\n  const b64 = typeof btoa === 'function'\n    ? btoa(str)\n    : Buffer.from(str, 'binary').toString('base64');\n  // URL-safe\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\n/** Generate a cryptographically random string of given length. */\nexport function generateRandomString(length = 43): string {\n  const array = new Uint8Array(length);\n  if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\n    crypto.getRandomValues(array);\n  } else {\n    // Fallback for Node.js\n    const cryptoNode = require('crypto');\n    const buf = cryptoNode.randomBytes(length);\n    buf.forEach((b: number, i: number) => { array[i] = b; });\n  }\n  return base64UrlEncode(array);\n}\n\n/** Create PKCE code verifier and code challenge pair. */\nexport async function generatePKCECodes(): Promise<{ codeVerifier: string; codeChallenge: string }> {\n  const codeVerifier = generateRandomString(64);\n  const encoder = new TextEncoder();\n  const data = encoder.encode(codeVerifier);\n  const hashBuffer = await (crypto.subtle || (require('crypto').webcrypto.subtle))\n    .digest('SHA-256', data);\n  const hashArray = new Uint8Array(hashBuffer);\n  const codeChallenge = base64UrlEncode(hashArray);\n  return { codeVerifier, codeChallenge };\n}\n\n/** Build the OAuth2 authorization URL with PKCE parameters. */\nexport function buildAuthorizeUrl(\n  domain: string,\n  clientId: string,\n  redirectUri: string,\n  email: string,\n  scope: string,\n  codeChallenge: string,\n  state: string,\n): string {\n  const url = new URL(`https://${domain}/authorize`);\n  url.searchParams.set('response_type', 'code');\n  url.searchParams.set('client_id', clientId);\n  url.searchParams.set('redirect_uri', redirectUri);\n  url.searchParams.set('scope', scope);\n  url.searchParams.set('code_challenge', codeChallenge);\n  url.searchParams.set('code_challenge_method', 'S256');\n  url.searchParams.set('state', state);\n  url.searchParams.set('login_hint', email);\n  return url.toString();\n}\n\n/** Exchange an authorization code for tokens via the token endpoint. */\nexport async function exchangeCodeForToken(\n  domain: string,\n  clientId: string,\n  code: string,\n  codeVerifier: string,\n  redirectUri: string,\n): Promise<any> {\n  const url = `https://${domain}/oauth/token`;\n  const res = await fetchFn(url, {\n    method: 'post',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      grant_type: 'authorization_code',\n      client_id: clientId,\n      code,\n      code_verifier: codeVerifier,\n      redirect_uri: redirectUri,\n    }),\n  });\n  if (!res.ok) {\n    throw new Error(`Token exchange failed: ${res.status} ${res.statusText}: ${await res.text()}`);\n  }\n  return res.json();\n}\n\n/** Refresh an access token using a refresh token. */\nexport async function refreshAccessToken(\n  domain: string,\n  clientId: string,\n  refreshToken: string,\n): Promise<any> {\n  const url = `https://${domain}/oauth/token`;\n  const res = await fetchFn(url, {\n    method: 'post',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      grant_type: 'refresh_token',\n      client_id: clientId,\n      refresh_token: refreshToken,\n    }),\n  });\n  if (!res.ok) {\n    throw new Error(`Refresh token failed: ${res.status} ${res.statusText}: ${await res.text()}`);\n  }\n  return res.json();\n}","import { AuthProvider, configureAuth } from \"pulse-common/auth\";\n\nimport {\n  buildAuthorizeUrl,\n  exchangeCodeForToken,\n  generatePKCECodes,\n  generateRandomString,\n  refreshAccessToken,\n} from \"pulse-common/pkce\";\n\n/**\n * Excel-specific OAuth2 PKCE AuthProvider using Office Dialog API.\n */\nexport class ExcelPKCEAuthProvider implements AuthProvider {\n  private domain: string;\n  private clientId: string;\n  private redirectUri: string;\n  private email: string;\n  private scope: string;\n\n  constructor(opts: {\n    domain: string;\n    clientId: string;\n    redirectUri: string;\n    email: string;\n    scope: string;\n  }) {\n    this.domain = opts.domain;\n    this.clientId = opts.clientId;\n    this.redirectUri = opts.redirectUri;\n    this.email = opts.email;\n    this.scope = opts.scope;\n  }\n\n  /** Open the OAuth2 authorize dialog with PKCE. */\n  async signIn(): Promise<void> {\n    // Generate PKCE values\n    const { codeVerifier, codeChallenge } = await generatePKCECodes();\n    const state = generateRandomString(16);\n    // Save in sessionStorage\n    sessionStorage.setItem(\"pkce_code_verifier\", codeVerifier);\n    sessionStorage.setItem(\"pkce_state\", state);\n    // Build URL\n    const url = buildAuthorizeUrl(\n      this.domain,\n      this.clientId,\n      this.redirectUri,\n      this.email,\n      this.scope,\n      codeChallenge,\n      state\n    );\n    console.log(\"PKCE URL:\", url);\n\n    // Launch Office dialog\n    return new Promise<void>((resolve, reject) => {\n      Office.context.ui.displayDialogAsync(\n        url,\n        { height: 60, width: 30, promptBeforeOpen: false },\n        (result) => {\n          if (result.status !== Office.AsyncResultStatus.Succeeded) {\n            return reject(new Error(\"Unable to open auth dialog\"));\n          }\n          const dialog = result.value;\n          dialog.addEventHandler(Office.EventType.DialogMessageReceived, async (args) => {\n            try {\n              const msg = JSON.parse(args.message);\n              const code = msg.code as string;\n              const returnedState = msg.state as string;\n              const expected = sessionStorage.getItem(\"pkce_state\");\n              if (returnedState !== expected || !code) {\n                throw new Error(\"Invalid OAuth2 response\");\n              }\n              const verifier = sessionStorage.getItem(\"pkce_code_verifier\")!;\n              const tokenRes = await exchangeCodeForToken(\n                this.domain,\n                this.clientId,\n                code,\n                verifier,\n                this.redirectUri\n              );\n              // Store tokens + expiry\n              const expiresAt = Date.now() + tokenRes.expires_in * 1000;\n              sessionStorage.setItem(\n                \"pkce_token\",\n                JSON.stringify({\n                  access_token: tokenRes.access_token,\n                  refresh_token: tokenRes.refresh_token,\n                  expires_at: expiresAt,\n                })\n              );\n              dialog.close();\n              resolve();\n            } catch (e) {\n              dialog.close();\n              reject(e);\n            }\n          });\n        }\n      );\n    });\n  }\n\n  /** Retrieve a valid access token, refreshing if needed. */\n  async getAccessToken(): Promise<string> {\n    const raw = sessionStorage.getItem(\"pkce_token\");\n    if (!raw) {\n      await this.signIn();\n      return this.getAccessToken();\n    }\n    const data = JSON.parse(raw) as {\n      access_token: string;\n      refresh_token?: string;\n      expires_at: number;\n    };\n    // If token expired (with 1min buffer)\n    if (Date.now() > data.expires_at - 60000) {\n      if (!data.refresh_token) {\n        sessionStorage.removeItem(\"pkce_token\");\n        return this.getAccessToken();\n      }\n      const refreshed = await refreshAccessToken(this.domain, this.clientId, data.refresh_token);\n      const newExpiry = Date.now() + refreshed.expires_in * 1000;\n      const newData = {\n        access_token: refreshed.access_token,\n        refresh_token: refreshed.refresh_token || data.refresh_token,\n        expires_at: newExpiry,\n      };\n      sessionStorage.setItem(\"pkce_token\", JSON.stringify(newData));\n      return newData.access_token;\n    }\n    return data.access_token;\n  }\n\n  /** Clear stored tokens/PKCE data. */\n  async signOut(): Promise<void> {\n    sessionStorage.removeItem(\"pkce_token\");\n    sessionStorage.removeItem(\"pkce_state\");\n    sessionStorage.removeItem(\"pkce_code_verifier\");\n  }\n}\n\n/** Convenience to register Excel PKCE auth as the shared AuthProvider. */\nexport function setupExcelPKCEAuth(opts: {\n  domain: string;\n  clientId: string;\n  redirectUri: string;\n  email: string;\n  scope: string;\n}) {\n  const provider = new ExcelPKCEAuthProvider(opts);\n  configureAuth(provider);\n}\n","/**\n * Position of a cell in a 2D data array (zero-based indices).\n */\nexport interface Pos {\n    row: number;\n    col: number;\n}\n\n/**\n * Extract non-empty string inputs and their positions from a 2D array of values.\n * @param data 2D array of cell values\n * @param options Optional offsets for row and column indices\n * @returns Object with inputs (string[]) and positions (Pos[])\n */\nexport function extractInputs(\n    data: any[][],\n    options?: { rowOffset?: number; colOffset?: number }\n): { inputs: string[]; positions: Pos[] } {\n    const { rowOffset = 0, colOffset = 0 } = options || {};\n    const inputs: string[] = [];\n    const positions: Pos[] = [];\n\n    for (let i = 0; i < data.length; i++) {\n        const row = data[i];\n        for (let j = 0; j < row.length; j++) {\n            const cell = row[j];\n            if (cell != null && cell !== \"\") {\n                inputs.push(cell.toString());\n                positions.push({\n                    row: i + rowOffset,\n                    col: j + colOffset,\n                });\n            }\n        }\n    }\n\n    return { inputs, positions };\n}\n\n/**\n * Randomly sample up to max elements from an array.\n * @param arr Input array\n * @param max Maximum number of elements to sample\n * @returns New array of sampled elements\n */\nexport function sampleInputs<T>(arr: T[], max: number): T[] {\n    if (arr.length <= max) {\n        return arr.slice();\n    }\n    // Shuffle copy using Fisher-Yates\n    const copy = arr.slice();\n    for (let i = copy.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [copy[i], copy[j]] = [copy[j], copy[i]];\n    }\n    return copy.slice(0, max);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\nimport { setupExcelPKCEAuth } from \"./pkceAuth\";\nimport { signIn, getAccessToken, signOut } from \"pulse-common/auth\";\nimport { analyzeSentiment, configureClient } from \"pulse-common/api\";\nimport { extractInputs } from \"pulse-common/input\";\n\n/**\n * Prompts the user to confirm or change the range via a dialog.\n * @param defaultRange The default A1 range including sheet name (e.g., 'Sheet1!A1:B5').\n * @returns The confirmed range string, or null if cancelled.\n */\nfunction promptRange(defaultRange: string): Promise<string | null> {\n  return new Promise((resolve, reject) => {\n    const url = `${window.location.origin}/SelectRangeDialog.html?range=${encodeURIComponent(defaultRange)}`;\n    Office.context.ui.displayDialogAsync(\n      url,\n      { height: 30, width: 20, displayInIframe: true },\n      (result) => {\n        if (result.status === Office.AsyncResultStatus.Failed) {\n          reject(result.error);\n        } else {\n          const dialog = result.value;\n          dialog.addEventHandler(Office.EventType.DialogMessageReceived, (arg) => {\n            try {\n              const msg = JSON.parse(arg.message);\n              dialog.close();\n              resolve(msg.range);\n            } catch (e) {\n              dialog.close();\n              reject(e);\n            }\n          });\n        }\n      }\n    );\n  });\n}\n\n// The initialize function must be run each time a new page is loaded\nOffice.onReady(() => {\n  const sideloadEl = document.getElementById(\"sideload-msg\");\n  const loginEl = document.getElementById(\"app-body\");\n  const authEl = document.getElementById(\"authenticated-app\");\n  if (sideloadEl) {\n    sideloadEl.style.display = \"none\";\n  }\n  // Determine login state from sessionStorage\n  const storedToken = sessionStorage.getItem(\"pkce_token\");\n  const storedEmail = sessionStorage.getItem(\"user-email\");\n  const redirectUri = `${window.location.origin}/auth-callback.html`;\n  if (storedToken && storedEmail && loginEl && authEl) {\n    // Already authenticated: configure and show authenticated view\n    setupExcelPKCEAuth({\n      domain: \"wise-dev.eu.auth0.com\",\n      clientId: \"SC5e4aoZKvcfH1MoPTxzMaA1d5LnxV4W\",\n      email: storedEmail,\n      redirectUri,\n      scope: \"openid profile email offline_access\",\n    });\n    configureClient({ baseUrl: \"https://dev.core.researchwiseai.com/pulse/v1\", getAccessToken });\n    initializeAuthenticatedUI(storedEmail);\n  } else if (loginEl && authEl) {\n    // Not authenticated: show login and bind connect\n    loginEl.style.display = \"flex\";\n    authEl.style.display = \"none\";\n    const connectButton = document.getElementById(\"connect\");\n    if (connectButton) {\n      connectButton.onclick = connect;\n    }\n  }\n});\n\nexport async function run() {\n  try {\n    await Excel.run(async (context) => {\n      /**\n       * Insert your Excel code here\n       */\n      const range = context.workbook.getSelectedRange();\n\n      // Read the range address\n      range.load(\"address\");\n\n      // Update the fill color\n      range.format.fill.color = \"yellow\";\n\n      await context.sync();\n      console.log(`The range address was ${range.address}.`);\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n// --- Authenticated UI and Job Manager ---\ninterface Job {\n  id: string;\n  name: string;\n  element: HTMLElement;\n}\nconst jobs: Job[] = [];\n\n/** Add a new job entry to the running jobs list */\nfunction addJob(name: string): string {\n  const id = `job-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  const li = document.createElement('li');\n  li.id = id;\n  li.className = 'ms-ListItem';\n  li.textContent = `${name}: Running...`;\n  const list = document.getElementById('jobs-list');\n  if (list) {\n    list.appendChild(li);\n  }\n  jobs.push({ id, name, element: li });\n  return id;\n}\n\n/** Remove a job entry from the running jobs list */\nfunction removeJob(id: string): void {\n  const index = jobs.findIndex(j => j.id === id);\n  if (index >= 0) {\n    const [job] = jobs.splice(index, 1);\n    job.element.remove();\n  }\n}\n\n/** Initialize the authenticated UI: show menu, bind handlers, and hide login */\nfunction initializeAuthenticatedUI(email: string): void {\n  const loginEl = document.getElementById('app-body');\n  const authEl = document.getElementById('authenticated-app');\n  if (loginEl && authEl) {\n    loginEl.style.display = 'none';\n    authEl.style.display = 'flex';\n  }\n  const emailDisplay = document.getElementById('user-email-display');\n  if (emailDisplay) {\n    emailDisplay.textContent = email;\n  }\n  // Logout handler\n  const logoutBtn = document.getElementById('logout');\n  if (logoutBtn) {\n    // Show logout in header\n    (logoutBtn as HTMLElement).style.display = 'inline-block';\n    logoutBtn.onclick = async () => {\n      // Hide logout button\n      (logoutBtn as HTMLElement).style.display = 'none';\n      await signOut();\n      // Clear stored email\n      sessionStorage.removeItem('user-email');\n      // Reset UI\n      if (authEl && loginEl) {\n        authEl.style.display = 'none';\n        loginEl.style.display = 'flex';\n      }\n      // Clear jobs\n      jobs.slice().forEach(j => removeJob(j.id));\n      // Clear email input\n      const emailInput = document.getElementById('email-input') as HTMLInputElement;\n      if (emailInput) { emailInput.value = ''; }\n    };\n  }\n  // Analyze Sentiment: confirm range via dialog, then run analysis\n  const analyzeBtn = document.getElementById('menu-analyze-sentiment');\n  if (analyzeBtn) {\n    analyzeBtn.onclick = () => {\n      const jobId = addJob('Analyze Sentiment');\n      Excel.run(async (context) => {\n        const sel = context.workbook.getSelectedRange();\n        sel.load('address');\n        await context.sync();\n        const defaultAddr: string = sel.address;\n        let confirmed: string | null;\n        try {\n          confirmed = await promptRange(defaultAddr);\n        } catch (e) {\n          console.error('Dialog error', e);\n          removeJob(jobId);\n          return;\n        }\n        if (!confirmed) {\n          removeJob(jobId);\n          return;\n        }\n        const parts = confirmed.split('!');\n        const sheetName = parts[0];\n        const rangeNotation = parts.slice(1).join('!');\n        const sheet = context.workbook.worksheets.getItem(sheetName);\n        const target = sheet.getRange(rangeNotation);\n        target.load(['values', 'rowIndex', 'columnIndex']);\n        await context.sync();\n        const values = target.values;\n        const { inputs, positions } = extractInputs(values, {\n          rowOffset: target.rowIndex + 1,\n          colOffset: target.columnIndex + 1,\n        });\n        if (inputs.length === 0) {\n          console.warn('No text found in selected data range for sentiment analysis.');\n          removeJob(jobId);\n          return;\n        }\n        const result = await analyzeSentiment(inputs, { fast: false });\n        positions.forEach((pos, i) => {\n          const sentiment = result.results[i].sentiment;\n          const cell = sheet.getCell(pos.row - 1, pos.col);\n          cell.values = [[sentiment]];\n        });\n        await context.sync();\n        removeJob(jobId);\n      }).catch((err) => {\n        console.error(err);\n        removeJob(jobId);\n      });\n    };\n  }\n}\n/**\n * Handles user sign-in and API client configuration using PKCE.\n */\nexport async function connect() {\n  try {\n    // TODO: replace with your actual Auth0 / OIDC settings\n    const domain = \"wise-dev.eu.auth0.com\";       // e.g. 'your-tenant.auth0.com'\n    const clientId = \"SC5e4aoZKvcfH1MoPTxzMaA1d5LnxV4W\";\n    // Redirect URI must match your Auth0 app and maps to auth-callback.html\n    const redirectUri = `${window.location.origin}/auth-callback.html`;\n    const scope = \"openid profile email offline_access\";\n    const apiBase = \"https://dev.core.researchwiseai.com/pulse/v1\";\n    const email = (document.getElementById(\"email-input\") as HTMLInputElement).value;\n    // Persist user email for session\n    sessionStorage.setItem(\"user-email\", email);\n\n    // Configure the PKCE AuthProvider\n    setupExcelPKCEAuth({ domain, clientId, email, redirectUri, scope });\n    // Perform interactive sign-in\n    await signIn();\n\n    // Initialize the Pulse API client\n    configureClient({ baseUrl: apiBase, getAccessToken });\n\n    console.log(\"✅ Connected and authenticated\");\n    // Switch to authenticated UI\n    initializeAuthenticatedUI(email);\n  } catch (err) {\n    console.error(\"Authentication failed\", err);\n  }\n}\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/logo-filled.png\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Pulse: AI-Powered Text Analysis</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\" style=\\\"position:relative\\\"> <img width=\\\"90\\\" height=\\\"90\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\" alt=\\\"Pulse\\\" title=\\\"Pulse\\\"/> <h1 class=\\\"ms-font-su\\\">Pulse</h1> <button id=\\\"logout\\\" class=\\\"ms-Button ms-Button--command\\\" style=\\\"display:none;position:absolute;top:20px;right:20px\\\"> <span class=\\\"ms-Button-label\\\">Logout</span> </button> </header> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\">Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> the Pulse add-in for testing.</h2> </section> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> <h2 class=\\\"ms-font-xl\\\">AI-Powered Text Analysis for Excel</h2> <ul class=\\\"ms-List ms-welcome__features\\\"> <li class=\\\"ms-ListItem\\\"> <i class=\\\"ms-Icon ms-Icon--Emoji2 ms-font-xl\\\" aria-hidden=\\\"true\\\"></i> <span class=\\\"ms-font-m\\\">Analyze Sentiment</span> </li> <li class=\\\"ms-ListItem\\\"> <i class=\\\"ms-Icon ms-Icon--BulletedListText ms-font-xl\\\" aria-hidden=\\\"true\\\"></i> <span class=\\\"ms-font-m\\\">Generate Themes</span> </li> <li class=\\\"ms-ListItem\\\"> <i class=\\\"ms-Icon ms-Icon--Tag ms-font-xl\\\" aria-hidden=\\\"true\\\"></i> <span class=\\\"ms-font-m\\\">Allocate Themes</span> </li> <li class=\\\"ms-ListItem\\\"> <i class=\\\"ms-Icon ms-Icon--Settings ms-font-xl\\\" aria-hidden=\\\"true\\\"></i> <span class=\\\"ms-font-m\\\">Manage Theme Sets &amp; Settings</span> </li> </ul> <p class=\\\"ms-font-l\\\">Please enter your email to connect:</p> <div class=\\\"ms-TextField\\\" style=\\\"width:100%;margin-bottom:12px\\\"> <label class=\\\"ms-Label\\\" for=\\\"email-input\\\">Email address</label> <input type=\\\"email\\\" id=\\\"email-input\\\" placeholder=\\\"you@contoso.com\\\" class=\\\"ms-TextField-field\\\"/> </div> <button id=\\\"connect\\\" class=\\\"ms-welcome__action ms-Button ms-Button--hero ms-font-xl\\\"> <span class=\\\"ms-Button-label\\\">Connect</span> </button> </main> <main id=\\\"authenticated-app\\\" class=\\\"ms-welcome__main\\\" style=\\\"padding:0;display:none;flex-direction:column;align-items:flex-start;width:100%\\\"> <div id=\\\"user-info\\\" style=\\\"display:flex;justify-content:flex-start;align-items:center;width:100%;padding:0 10px 10px 10px\\\"> <span>Welcome, <b id=\\\"user-email-display\\\"></b></span> </div> <h2 class=\\\"ms-font-xl\\\" style=\\\"width:100%;text-align:center\\\">Select a Task</h2> <ul id=\\\"task-menu\\\" class=\\\"ms-List\\\" style=\\\"list-style-type:none;margin:0;padding:0;width:100%;display:flex;flex-direction:column;align-items:center\\\"> <li class=\\\"ms-ListItem\\\"> <button id=\\\"menu-analyze-sentiment\\\" class=\\\"ms-Button ms-Button--command ms-font-m\\\"> <i class=\\\"ms-Icon ms-Icon--Emoji2 ms-font-xl\\\" aria-hidden=\\\"true\\\"></i> <span style=\\\"margin-left:.75rem\\\">Analyze Sentiment</span> </button> </li> <li class=\\\"ms-ListItem\\\"> <button id=\\\"menu-generate-themes\\\" class=\\\"ms-Button ms-Button--command ms-font-m\\\"> <i class=\\\"ms-Icon ms-Icon--BulletedListText ms-font-xl\\\" aria-hidden=\\\"true\\\"></i> <span style=\\\"margin-left:.75rem\\\">Generate Themes</span> </button> </li> <li class=\\\"ms-ListItem\\\"> <button id=\\\"menu-compare-similarity\\\" class=\\\"ms-Button ms-Button--command ms-font-m\\\"> <i class=\\\"ms-Icon ms-Icon--Tag ms-font-xl\\\" aria-hidden=\\\"true\\\"></i> <span style=\\\"margin-left:.75rem\\\">Compare Similarity</span> </button> </li> <li class=\\\"ms-ListItem\\\"> <button id=\\\"menu-settings\\\" class=\\\"ms-Button ms-Button--command ms-font-m\\\"> <i class=\\\"ms-Icon ms-Icon--Settings ms-font-xl\\\" aria-hidden=\\\"true\\\"></i> <span style=\\\"margin-left:.75rem\\\">Settings</span> </button> </li> </ul> <div id=\\\"jobs-container\\\" style=\\\"width:100%;padding:0 10px 10px 10px\\\"> <h3 class=\\\"ms-font-l\\\">Running Jobs</h3> <ul id=\\\"jobs-list\\\" class=\\\"ms-List\\\" style=\\\"list-style-type:none;padding-left:0;max-height:200px;overflow-y:auto\\\"></ul> </div> </main> </body> </html> \";\n// Exports\nexport default code;"],"names":["__global__","globalThis","self","g","__globalThis__","F","this","fetch","DOMException","prototype","exports","support","Symbol","Blob","e","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","length","getOwnPropertyNames","consumed","body","_noBody","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","arrayBuffer","byteOffset","then","text","match","encoding","exec","readAsText","chars","i","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","method","upcased","url","credentials","mode","signal","toUpperCase","AbortController","referrer","cache","reParamSearch","replace","Date","getTime","form","trim","split","bytes","decodeURIComponent","Response","bodyInit","status","RangeError","ok","statusText","clone","response","redirectStatuses","redirect","location","err","message","stack","create","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","substr","line","parts","key","console","warn","responseURL","responseText","setTimeout","ontimeout","onabort","open","href","fixUrl","withCredentials","responseType","names","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","ponyfill","ctx","module","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","n","getter","__esModule","d","a","definition","o","enumerable","Function","window","prop","scriptUrl","importScripts","document","currentScript","tagName","src","scripts","getElementsByTagName","p","b","baseURI","_regeneratorRuntime","r","t","asyncIterator","u","toStringTag","c","configurable","writable","h","Generator","arg","delegate","f","sent","_sent","dispatchException","abrupt","s","Context","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","getPrototypeOf","y","x","v","_invoke","AsyncIterator","_typeof","__await","return","w","tryEntries","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","unshift","pop","prev","charAt","stop","rval","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","provider","ensureProvider","signIn","_signIn","_callee4","_context4","signOut","_signOut","_callee5","_context5","getAccessToken","_getAccessToken","_callee6","_context6","baseUrl","fetchFn","fetchOriginal","sleepFn","ms","postWithJob","_x","_x2","_postWithJob","_callee","_options$intervalMs","intervalMs","token","_options$onProgress","_options$onProgress2","data","jobId","loopCount","_options$onProgress3","_options$onProgress4","resultResp","errText","_errText","_args","_context","contentType","Authorization","concat","stringify","onProgress","taskName","log","pollJobStatus","resultUrl","configureClient","opts","analyzeSentiment","_x3","_x4","_analyzeSentiment","_callee2","inputs","_context2","fast","results","_x0","_pollJobStatus","encodeURIComponent","base64UrlEncode","str","btoa","Buffer","from","generateRandomString","array","crypto","getRandomValues","require","randomBytes","generatePKCECodes","_generatePKCECodes","codeVerifier","encoder","hashBuffer","hashArray","codeChallenge","TextEncoder","encode","subtle","digest","buildAuthorizeUrl","domain","clientId","redirectUri","email","scope","state","URL","searchParams","exchangeCodeForToken","_x5","_exchangeCodeForToken","code","res","grant_type","client_id","code_verifier","redirect_uri","t0","t1","t2","t3","refreshAccessToken","_x6","_x7","_x8","_refreshAccessToken","_callee3","refreshToken","_context3","refresh_token","_defineProperties","_toPropertyKey","toPrimitive","_toPrimitive","ExcelPKCEAuthProvider","_classCallCheck","_yield$generatePKCECo","_this","sessionStorage","setItem","Office","context","ui","displayDialogAsync","height","width","promptBeforeOpen","AsyncResultStatus","Succeeded","dialog","addEventHandler","EventType","DialogMessageReceived","_ref","args","msg","returnedState","expected","verifier","tokenRes","expiresAt","getItem","now","expires_in","access_token","expires_at","close","raw","refreshed","newExpiry","newData","removeItem","setupExcelPKCEAuth","authProvider","extractInputs","_ref$rowOffset","rowOffset","_ref$colOffset","colOffset","positions","row","j","cell","col","_arrayLikeToArray","promptRange","defaultRange","origin","displayInIframe","Failed","range","onReady","sideloadEl","getElementById","loginEl","authEl","style","display","storedToken","storedEmail","initializeAuthenticatedUI","connectButton","onclick","connect","jobs","removeJob","id","index","findIndex","splice","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","element","remove","emailDisplay","textContent","logoutBtn","emailInput","analyzeBtn","Math","random","li","createElement","className","list","appendChild","addJob","Excel","run","_ref2","sel","defaultAddr","confirmed","sheetName","rangeNotation","sheet","target","_extractInputs","workbook","getSelectedRange","load","sync","address","worksheets","getRange","rowIndex","columnIndex","pos","sentiment","getCell","_connect","apiBase"],"sourceRoot":""}